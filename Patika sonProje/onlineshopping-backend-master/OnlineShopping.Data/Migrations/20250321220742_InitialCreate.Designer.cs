// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineShopping.Data;

#nullable disable

namespace OnlineShopping.Data.Migrations
{
    [DbContext(typeof(OnlineShoppingDbContext))]
    [Migration("20250321220742_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
          
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

          
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

           
            modelBuilder.Entity("OnlineShopping.Data.Entities.MaintenanceLog", b =>
                {
            
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                  
                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                   
                    b.Property<bool>("IsInMaintenance")
                        .HasColumnType("tinyint(1)");

                  
                    b.Property<DateTime>("MaintenanceDate")
                        .HasColumnType("datetime(6)");

             
                    b.HasKey("Id");

                
                    b.ToTable("MaintenanceLogs");
                });

          
            modelBuilder.Entity("OnlineShopping.Data.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                  
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    
                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                   
                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(65,30)");

                  
                    b.HasKey("Id");

                  
                    b.HasIndex("CustomerId");

              
                    b.ToTable("Orders");
                });


            modelBuilder.Entity("OnlineShopping.Data.Entities.OrderProduct", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                   
                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                   
                    b.HasKey("OrderId", "ProductId");

                    
                    b.HasIndex("ProductId");

                    
                    b.ToTable("OrderProducts");
                });

           
            modelBuilder.Entity("OnlineShopping.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                   
                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                   
                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("longtext");

                   
                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                   
                    b.HasKey("Id");

                 
                    b.ToTable("Products");
                });

            
            modelBuilder.Entity("OnlineShopping.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                   
                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    
                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                  
                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

          
                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                   
                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                  
                    b.Property<int>("Role")
                        .HasColumnType("int");

                   
                    b.HasKey("Id");

                   
                    b.HasIndex("Email")
                        .IsUnique();

              
                    b.ToTable("Users");
                });

            
            modelBuilder.Entity("OnlineShopping.Data.Entities.Order", b =>
                {
                    b.HasOne("OnlineShopping.Data.Entities.User", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

  
                    b.Navigation("Customer");
                });

         
            modelBuilder.Entity("OnlineShopping.Data.Entities.OrderProduct", b =>
                {
                    b.HasOne("OnlineShopping.Data.Entities.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineShopping.Data.Entities.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

              
                    b.Navigation("Order");

                    b.Navigation("Product");
                });

           
            modelBuilder.Entity("OnlineShopping.Data.Entities.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

        
            modelBuilder.Entity("OnlineShopping.Data.Entities.Product", b =>
                {
                    b.Navigation("OrderProducts");
                });

           
            modelBuilder.Entity("OnlineShopping.Data.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
