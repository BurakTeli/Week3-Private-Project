// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineShopping.Data;

#nullable disable

namespace OnlineShopping.Data.Migrations
{
    [DbContext(typeof(OnlineShoppingDbContext))]
    partial class OnlineShoppingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            // Set model-level annotations
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            // Configure auto-increment columns for MySQL
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            // Configure MaintenanceLog entity
            modelBuilder.Entity("OnlineShopping.Data.Entities.MaintenanceLog", b =>
                {
                    // Primary key
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    // Maintenance description
                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    // Maintenance status flag
                    b.Property<bool>("IsInMaintenance")
                        .HasColumnType("tinyint(1)");

                    // Maintenance date
                    b.Property<DateTime>("MaintenanceDate")
                        .HasColumnType("datetime(6)");

                    // Set primary key
                    b.HasKey("Id");

                    // Map to table
                    b.ToTable("MaintenanceLogs");
                });

            // Configure Order entity
            modelBuilder.Entity("OnlineShopping.Data.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    // Foreign key to User entity
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    // Order date
                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    // Total amount for the order
                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(65,30)");

                    // Set primary key
                    b.HasKey("Id");

                    // Create index on CustomerId
                    b.HasIndex("CustomerId");

                    // Map to table
                    b.ToTable("Orders");
                });

            // Configure OrderProduct entity
            modelBuilder.Entity("OnlineShopping.Data.Entities.OrderProduct", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    // Quantity of the product in the order
                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    // Composite primary key
                    b.HasKey("OrderId", "ProductId");

                    // Create index on ProductId
                    b.HasIndex("ProductId");

                    // Map to table
                    b.ToTable("OrderProducts");
                });

            // Configure Product entity
            modelBuilder.Entity("OnlineShopping.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    // Product price
                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    // Product name
                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    // Product stock quantity
                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    // Set primary key
                    b.HasKey("Id");

                    // Map to table
                    b.ToTable("Products");
                });

            // Configure User entity
            modelBuilder.Entity("OnlineShopping.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    // Email address (must be unique)
                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    // First name of the user
                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    // Last name of the user
                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    // Password
                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    // Phone number
                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    // Role of the user (admin, customer, etc.)
                    b.Property<int>("Role")
                        .HasColumnType("int");

                    // Set primary key
                    b.HasKey("Id");

                    // Unique constraint on Email
                    b.HasIndex("Email")
                        .IsUnique();

                    // Map to table
                    b.ToTable("Users");
                });

            // Configure relation: Order -> User (Customer)
            modelBuilder.Entity("OnlineShopping.Data.Entities.Order", b =>
                {
                    b.HasOne("OnlineShopping.Data.Entities.User", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    // Navigation property
                    b.Navigation("Customer");
                });

            // Configure relation: OrderProduct -> Order and Product
            modelBuilder.Entity("OnlineShopping.Data.Entities.OrderProduct", b =>
                {
                    b.HasOne("OnlineShopping.Data.Entities.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineShopping.Data.Entities.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    // Navigation properties
                    b.Navigation("Order");
                    b.Navigation("Product");
                });


            modelBuilder.Entity("OnlineShopping.Data.Entities.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

        
            modelBuilder.Entity("OnlineShopping.Data.Entities.Product", b =>
                {
                    b.Navigation("OrderProducts");
                });

 
            modelBuilder.Entity("OnlineShopping.Data.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
